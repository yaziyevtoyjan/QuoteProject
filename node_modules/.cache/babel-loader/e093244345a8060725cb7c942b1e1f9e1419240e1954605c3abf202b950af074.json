{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Nurana\",\n  text: \"Hello\"\n}, {\n  id: \"q2\",\n  author: \"Toyjan\",\n  text: \"Hello\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n        text: quote.text,\n        author: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn--flat\",\n            to: `${match.url}/comments`,\n            children: \"Load Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/comments`,\n        children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"D7M6B9GqVvAtZtSfJ7b4xEkdXlI=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","Link","Route","useParams","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","QuoteDetail","_s","match","params","sendRequest","status","data","loadedQuote","error","quote","find","quoteId","children","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","className","to","url","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/pages/QuoteDetail.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Nurana\", text: \"Hello\" },\r\n  { id: \"q2\", author: \"Toyjan\", text: \"Hello\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <HighlightedQuote text={quote.text} author={quote.author} />\r\n        <Route path={match.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n              Load Comments\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}