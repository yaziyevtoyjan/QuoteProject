{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useHttp from '../hooks/use-http';\nimport { getAllComments } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComment\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"0D4RgDA8jynFkhxo/jNVBexFkUs=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","useParams","useHttp","getAllComments","jsxDEV","_jsxDEV","Comments","_s","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComment","startAddCommentHandler","addedCommentHandler","className","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddedComment","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport useHttp from '../hooks/use-http';\nimport { getAllComments } from '../lib/api';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoteId} = params;\n  const { sendRequest, status, data: loadedComment} = useHttp(getAllComments);\n\n  useEffect(()=>{\n    sendRequest(quoteId)\n  },[quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  const addedCommentHandler = () =>{\n\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}/>}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,2CAA2C;AACrE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM;IAACU;EAAO,CAAC,GAAGD,MAAM;EACxB,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGb,OAAO,CAACC,cAAc,CAAC;EAE3EN,SAAS,CAAC,MAAI;IACZe,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAC,CAACA,OAAO,EAAEC,WAAW,CAAC,CAAC;EAEzB,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAK,CAEjC,CAAC;EAED,oBACEZ,OAAA;IAASa,SAAS,EAAEnB,OAAO,CAACoB,QAAS;IAAAC,QAAA,gBACnCf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB,CAAChB,eAAe,iBACfH,OAAA;MAAQa,SAAS,EAAC,KAAK;MAACO,OAAO,EAAET,sBAAuB;MAAAI,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EACAhB,eAAe,iBAAIH,OAAA,CAACL,cAAc;MAACW,OAAO,EAAED,MAAM,CAACC,OAAQ;MAACe,cAAc,EAAET;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnGnB,OAAA;MAAAe,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAACjB,EAAA,CA9BID,QAAQ;EAAA,QAEGL,SAAS,EAE4BC,OAAO;AAAA;AAAAyB,EAAA,GAJvDrB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}