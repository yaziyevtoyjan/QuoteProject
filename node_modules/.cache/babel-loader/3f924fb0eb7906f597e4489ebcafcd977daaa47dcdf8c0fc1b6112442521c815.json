{"ast":null,"code":"const FIREBASE_DOMAIN='https://quotes-35d3e-default-rtdb.firebaseio.com';export async function getAllQuotes(){const response=await fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"));const data=await response.json();if(!response.ok){throw new Error(data.message||'Could not fetch quotes.');}const transformedQuotes=[];for(const key in data){const quoteObj={id:key,...data[key]};transformedQuotes.push(quoteObj);}return transformedQuotes;}export async function getSingleQuote(quoteId){const response=await fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes/\").concat(quoteId,\".json\"));const data=await response.json();if(!response.ok){throw new Error(data.message||'Could not fetch quote.');}const loadedQuote={id:quoteId,...data};return loadedQuote;}export async function addQuote(quoteData){const response=await fetch(\"\".concat(FIREBASE_DOMAIN,\"/quotes.json\"),{method:'POST',body:JSON.stringify(quoteData),headers:{'Content-Type':'application/json'}});const data=await response.json();if(!response.ok){throw new Error(data.message||'Could not create quote.');}return null;}export async function addComment(requestData){const response=await fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(requestData.quoteId,\".json\"),{method:'POST',body:JSON.stringify(requestData.commentData),headers:{'Content-Type':'application/json'}});const data=await response.json();if(!response.ok){throw new Error(data.message||'Could not add comment.');}return{commentId:data.name};}export async function getAllComments(quoteId){const response=await fetch(\"\".concat(FIREBASE_DOMAIN,\"/comments/\").concat(quoteId,\".json\"));const data=await response.json();if(!response.ok){throw new Error(data.message||'Could not get comments.');}const transformedComments=[];for(const key in data){const commentObj={id:key,...data[key]};transformedComments.push(commentObj);}return transformedComments;}","map":{"version":3,"names":["FIREBASE_DOMAIN","getAllQuotes","response","fetch","concat","data","json","ok","Error","message","transformedQuotes","key","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj"],"sources":["C:/Users/User/Projects/test/src/components/lib/api.js"],"sourcesContent":["const FIREBASE_DOMAIN = 'https://quotes-35d3e-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}