{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from 'react';\nimport { Link, Route, useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Nurana\",\n  text: \"Seni seviyorum<3\"\n}, {\n  id: 'q2',\n  author: 'Can',\n  text: \"I love you too\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n        text: quote.text,\n        author: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/quotes/${params.quoteId}/comments`,\n        children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","Link","Route","useParams","Comments","HighlightedQuote","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","QuoteDetail","_s","params","quote","find","quoteId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","path","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/pages/QuoteDetail.js"],"sourcesContent":["import React, { Fragment } from 'react'\r\nimport { Link, Route, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\n\r\nconst DUMMY_QUOTES=[\r\n    {id:\"q1\", author: \"Nurana\", text:\"Seni seviyorum<3\"},\r\n    {id:'q2', author: 'Can', text:\"I love you too\"}\r\n]\r\n\r\nconst QuoteDetail = () =>{\r\n    const params =useParams();\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\r\n\r\n    if(!quote){\r\n        return <p>No quote found!</p>\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>     \r\n      <HighlightedQuote text={quote.text} author={quote.author}/>\r\n      <div className='centered'>\r\n        <Link className='btn--flat' to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\r\n      </div>\r\n      <Route path={`/quotes/${params.quoteId}/comments`}>\r\n        <Comments/>\r\n      </Route>\r\n      </Fragment>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuoteDetail\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,QAAQ,2CAA2C;AAClF,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,YAAY,GAAC,CACf;EAACC,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAC;AAAkB,CAAC,EACpD;EAACF,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAC;AAAgB,CAAC,CAClD;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAEX,SAAS,CAAC,CAAC;EAEzB,MAAMY,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;EAErE,IAAG,CAACF,KAAK,EAAC;IACN,oBAAOR,OAAA;MAAAW,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAGF,oBACEf,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACP,QAAQ;MAAAkB,QAAA,gBACTX,OAAA,CAACF,gBAAgB;QAACM,IAAI,EAAEI,KAAK,CAACJ,IAAK;QAACD,MAAM,EAAEK,KAAK,CAACL;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3Df,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAL,QAAA,eACvBX,OAAA,CAACN,IAAI;UAACsB,SAAS,EAAC,WAAW;UAACC,EAAE,EAAE,WAAWV,MAAM,CAACG,OAAO,WAAY;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACNf,OAAA,CAACL,KAAK;QAACuB,IAAI,EAAE,WAAWX,MAAM,CAACG,OAAO,WAAY;QAAAC,QAAA,eAChDX,OAAA,CAACH,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAT,EAAA,CAvBKD,WAAW;EAAA,QACCT,SAAS;AAAA;AAAAuB,EAAA,GADrBd,WAAW;AAyBjB,eAAeA,WAAW;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}