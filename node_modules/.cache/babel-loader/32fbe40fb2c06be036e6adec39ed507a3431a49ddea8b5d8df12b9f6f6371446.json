{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","jsxDEV","_jsxDEV","Comments","_s","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onAddedComment","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length >0)){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className=\"centered\">No comments were added yet!</p>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}