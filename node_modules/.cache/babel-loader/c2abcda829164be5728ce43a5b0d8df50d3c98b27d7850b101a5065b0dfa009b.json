{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status\n  } = useHttp(addComment);\n  const submitFormHandler = event => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    sendRequest({\n      text: enteredText\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"2o+dEXHrK3oKUsydXsWXh3XbJJs=\", false, function () {\n  return [useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","classes","useHttp","addComment","jsxDEV","_jsxDEV","NewCommentForm","props","_s","commentTextRef","sendRequest","status","submitFormHandler","event","preventDefault","text","enteredText","className","form","onSubmit","children","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","ref","actions","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const {sendRequest, status} = useHttp(addComment);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    sendRequest({text: enteredText});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,UAAU,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAMC,cAAc,GAAGT,MAAM,CAAC,CAAC;EAE/B,MAAM;IAACU,WAAW;IAAEC;EAAM,CAAC,GAAGT,OAAO,CAACC,UAAU,CAAC;EAEjD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;;IAEAJ,WAAW,CAAC;MAACK,IAAI,EAAEC;IAAW,CAAC,CAAC;EAClC,CAAC;EAED,oBACEX,OAAA;IAAMY,SAAS,EAAEhB,OAAO,CAACiB,IAAK;IAACC,QAAQ,EAAEP,iBAAkB;IAAAQ,QAAA,gBACzDf,OAAA;MAAKY,SAAS,EAAEhB,OAAO,CAACoB,OAAQ;MAACF,QAAQ,EAAEP,iBAAkB;MAAAQ,QAAA,gBAC3Df,OAAA;QAAOiB,OAAO,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CrB,OAAA;QAAUsB,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,GAAG;QAACC,GAAG,EAAEpB;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACNrB,OAAA;MAAKY,SAAS,EAAEhB,OAAO,CAAC6B,OAAQ;MAAAV,QAAA,eAC9Bf,OAAA;QAAQY,SAAS,EAAC,KAAK;QAAAG,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAClB,EAAA,CAxBIF,cAAc;EAAA,QAGYJ,OAAO;AAAA;AAAA6B,EAAA,GAHjCzB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}