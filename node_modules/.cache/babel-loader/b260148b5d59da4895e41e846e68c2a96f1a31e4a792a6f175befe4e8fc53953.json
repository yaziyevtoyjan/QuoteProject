{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\test\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    sendRequest({\n      text: enteredText\n    }, props.quoteId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"8DKikEuDjJf29H01Ieyn3miLnnU=\", false, function () {\n  return [useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","useEffect","classes","useHttp","addComment","LoadingSpinner","jsxDEV","_jsxDEV","NewCommentForm","props","_s","commentTextRef","sendRequest","status","onAddedComment","error","submitFormHandler","event","preventDefault","enteredText","current","value","text","quoteId","className","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","control","htmlFor","id","rows","ref","actions","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/test/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const {sendRequest, status} = useHttp(addComment);\n\n  const {onAddedComment} = props;\n\n  useEffect(()=>{\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  },[status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    sendRequest({text: enteredText}, props.quoteId);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAMC,cAAc,GAAGX,MAAM,CAAC,CAAC;EAE/B,MAAM;IAACY,WAAW;IAAEC;EAAM,CAAC,GAAGV,OAAO,CAACC,UAAU,CAAC;EAEjD,MAAM;IAACU;EAAc,CAAC,GAAGL,KAAK;EAE9BR,SAAS,CAAC,MAAI;IACZ,IAAGY,MAAM,KAAK,WAAW,IAAI,CAACE,KAAK,EAAC;MAClCD,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAC,CAACD,MAAM,EAAEE,KAAK,EAAED,cAAc,CAAC,CAAC;EAElC,MAAME,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,WAAW,GAAGR,cAAc,CAACS,OAAO,CAACC,KAAK;IAChD;;IAEAT,WAAW,CAAC;MAACU,IAAI,EAAEH;IAAW,CAAC,EAAEV,KAAK,CAACc,OAAO,CAAC;EACjD,CAAC;EAED,oBACEhB,OAAA;IAAMiB,SAAS,EAAEtB,OAAO,CAACuB,IAAK;IAACC,QAAQ,EAAEV,iBAAkB;IAAAW,QAAA,GACxDd,MAAM,KAAK,SAAS,iBACnBN,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAG,QAAA,eACvBpB,OAAA,CAACF,cAAc;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACN,eACDxB,OAAA;MAAKiB,SAAS,EAAEtB,OAAO,CAAC8B,OAAQ;MAACN,QAAQ,EAAEV,iBAAkB;MAAAW,QAAA,gBAC3DpB,OAAA;QAAO0B,OAAO,EAAC,SAAS;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CxB,OAAA;QAAU2B,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,GAAG;QAACC,GAAG,EAAEzB;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACNxB,OAAA;MAAKiB,SAAS,EAAEtB,OAAO,CAACmC,OAAQ;MAAAV,QAAA,eAC9BpB,OAAA;QAAQiB,SAAS,EAAC,KAAK;QAAAG,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACrB,EAAA,CAtCIF,cAAc;EAAA,QAGYL,OAAO;AAAA;AAAAmC,EAAA,GAHjC9B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}